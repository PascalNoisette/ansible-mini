
---
- name: Install passwords on mini
  hosts: mini
  become: yes
  tasks:
    - include: tasks/request_credential.yml path_to_check=/etc/nginx/passwords/iu_pa.password
    - name: Make sure we can use htpasswd module
      apt: "pkg=python3-passlib state=present"
      when: file.stat.exists == False
    - name: "Generate htpasswd"
      htpasswd:
        path: /etc/nginx/passwords/iu_pa.password
        name: "{{ username.user_input }}"
        password: "{{ password.user_input }}"
        owner: root
        group: www-data
        mode: 0640
      when: file.stat.exists == False
    - name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
      include_vars: "{{ lookup('first_found', possible_files, errors='ignore') }}"
      vars:
        possible_files:
          - "vars/{{ ansible_lsb.id }}.yml"
      ignore_errors: yes

- name: Install jdauphant.nginx on mini
  hosts: mini
  become: yes
  tasks:
    - name: Ensures /etc/nginx/conf.d/ dir exists
      file: path=/etc/nginx/conf.d/ state=directory
    - name: Ensures /etc/nginx/site-enabled/ dir exists
      file: path=/etc/nginx/site-enabled/ state=directory
    - name: Ensures /etc/nginx/modules-enabled/ dir exists
      file: path=/etc/nginx/modules-enabled/ state=directory
    - name: create conf.d template
      template:
        src: "{{ item }}"
        dest: /etc/nginx/conf.d/{{ item | basename }}
      with_fileglob:
      - templates/conf.d/*
    - name: create vhost template
      template:
        src: "{{ item }}"
        dest: /etc/nginx/sites-enabled/{{ item | basename }}
      with_items:
      - templates/vhost/bitwardenrs.conf
      - templates/vhost/cachet.conf
      - templates/vhost/drawio.conf
      - templates/vhost/evernote.conf
      - templates/vhost/git.conf
      - templates/vhost/gpodder.conf
      - templates/vhost/grocy.conf
      - templates/vhost/home-assistant.conf
      - templates/vhost/jellyfin.conf
      - templates/vhost/jenkins.conf
      - templates/vhost/nextcloud.conf
      - templates/vhost/qbitorrent.conf
      - templates/vhost/redmine.conf
      - templates/vhost/registry.conf
      - templates/vhost/rssfeed.conf
      - templates/vhost/search.conf
      - templates/vhost/snapdrop.conf
      - templates/vhost/tvheadend.conf
      - templates/vhost/velo.conf
      - templates/vhost/vnc.conf
      - templates/vhost/vscode.conf
      - templates/vhost/wallabag.conf
      - templates/vhost/wiki.conf
      - templates/vhost/wishlist.conf
    - name: create nginx modules template
      template:
        src: "{{ item }}"
        dest: /etc/nginx/modules-enabled/{{ item | basename }}
      with_fileglob:
      - templates/modules.d/*
  roles:
    - role: ansible-role-nginx-modsec3-crs3
      nginx_pkgs:
        - nginx
      nginx_install_epel_repo: False
      nginx_official_repo: True
      nginx_official_repo_mainline: True
      nginx_module_configs:
        - ngx_http_modsecurity_module
      nginx_modules_location: /usr/lib/nginx/modules
      nginx_sites:
          default:
               - listen 80
               - listen 8443 ssl
               - listen [::]:443 ssl http2
               - server_name _
               - server_tokens off
               - modsecurity on;
               - location / { modsecurity_rules_file /etc/nginx/modsec/main.conf; return 302 https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DNXMX4C5MFAZC&source=url; }

- name: Compatibility with fail2ban
  hosts: mini
  become: yes
  tags: nginx-post-install
  tasks:
    - name: Disable modsec 404 for fail2ban
      replace:
        path: "/etc/nginx/modsec/modsecurity.conf"
        regexp: "SecAuditLogRelevantStatus"
        replace: "#SecAuditLogRelevantStatus"
    - name: Restart nginx for update modsec 404 for fail2ban
      command: service nginx restart

- name: Log rotate custom logs
  hosts: mini
  become: yes
  tags: nginx-post-install
  tasks:
    - name: Ensures /etc/logrotate.d/ dir exists
      file: path=/etc/logrotate.d/ state=directory
    - name: create logrotate rule
      template:
        src: "{{ item }}"
        dest: /etc/logrotate.d/{{ item | basename }}
      with_fileglob:
      - templates/logrotate.d/*